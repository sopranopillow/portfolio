{"version":3,"sources":["Engine/actions/LoopActions/Types.ts","Engine/actions/LoopActions/LoopActions.tsx","Engine/reducers/loopReducers/Types.ts","Engine/reducers/loopReducers/LoopReducer.tsx","Engine/Components/GeneralUtils/Collisions.tsx","Engine/Components/Functionality/Loop.tsx","Components/Square.tsx","Engine/Components/Map/Cell.tsx","Engine/Components/Map/Terrain.tsx","Components/App.tsx","serviceWorker.ts","Engine/store/store.tsx","index.tsx"],"names":["LoopActionTypes","FunctionType","subscribeToLoop","func","functionType","inputCheck","collisionFunction","collides","type","SUBSCRIBE","undefined","initialLoopState","subscriptions","checkCollision","object1","object2","obj1Bounds","obj2Bounds","l1","edges","r1","l2","r2","Loop","state","requestID","fps","keys","timeMeasurements","keyChange","ev","setState","map","key","isPressed","loop","push","performance","now","msPassed","length","Math","round","props","forEach","MOVEMENT","objToCheck","indexOf","window","requestAnimationFrame","this","document","onkeydown","onkeyup","cancelAnimationFrame","className","React","connect","store","loopState","Square","generateBoundaries","top","left","numberOfEdges","size","hole","movement","movingRight","styles","position","backgroundColor","width","height","style","Cell","getBounds","isWall","GENERAL","Terrain","sizeOfCell","cells","i","j","cell","App","Component","Boolean","location","hostname","match","rootReducer","combineReducers","action","createStore","applyMiddleware","thunk","configureStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75fdf7dd.chunk.js","sourcesContent":["import { FunctionType } from \"../../reducers\";\r\n\r\nexport enum LoopActionTypes {\r\n    SUBSCRIBE = 'SUBSCRIBE',\r\n    ADDCOLLISIONFUNC = 'ADDCOLLISIONFUNC'\r\n}\r\n\r\nexport interface ILoopSubscribe {\r\n    type: LoopActionTypes.SUBSCRIBE;\r\n    func: Function;\r\n    inputCheck: boolean;\r\n    functionType: FunctionType;\r\n    collisionFunction: Function | undefined;\r\n    collides: boolean;\r\n}\r\n\r\n// ILoopSubscribe | ILoopX\r\nexport type LoopActions = ILoopSubscribe;","import { LoopActions, LoopActionTypes } from './Types';\r\nimport { FunctionType } from '../../reducers';\r\n\r\nexport const subscribeToLoop = (\r\n    func: Function,\r\n    functionType: FunctionType,\r\n    inputCheck?: boolean,\r\n    collisionFunction?: Function,\r\n    collides?: boolean\r\n): LoopActions => {\r\n    return {\r\n        type: LoopActionTypes.SUBSCRIBE,\r\n        func: func,\r\n        functionType: functionType,\r\n        inputCheck: (inputCheck === undefined) ? false : inputCheck,\r\n        collisionFunction: collisionFunction,\r\n        collides: (collides === undefined) ? false : collides\r\n    };\r\n};","export enum FunctionType {\r\n    MOVEMENT = 'MOVEMENT',\r\n    GENERAL = 'GENERAL'\r\n}\r\n\r\nexport interface ISubscription {\r\n    func: Function;\r\n    inputCheck: boolean;\r\n    functionType: FunctionType;\r\n    collisionFunction: Function | undefined;\r\n    collides: boolean;\r\n}\r\n\r\nexport interface ILoopState {\r\n    subscriptions: ISubscription[];\r\n}","import { LoopActionTypes, LoopActions } from '../../actions';\r\nimport { ILoopState } from './Types';\r\n\r\n\r\nconst initialLoopState: ILoopState = {\r\n    subscriptions: []\r\n}\r\n\r\nexport const loopReducer = (\r\n    state = initialLoopState,\r\n    action: LoopActions\r\n): ILoopState => {\r\n    switch(action.type) {\r\n        case LoopActionTypes.SUBSCRIBE:\r\n            return {\r\n                subscriptions: [\r\n                    ...state.subscriptions,\r\n                    {\r\n                        inputCheck: action.inputCheck,\r\n                        func: action.func,\r\n                        functionType: action.functionType,\r\n                        collisionFunction: action.collisionFunction,\r\n                        collides: action.collides\r\n                    }\r\n                ]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ISubscription } from \"../../reducers\";\r\n\r\nexport interface IBoundaries {\r\n    numberOfEdges: number;\r\n    edges: number[][];\r\n    hole: boolean;\r\n}\r\n\r\nexport const checkCollision = (object1: ISubscription, object2: ISubscription): boolean => {\r\n    const obj1Bounds: IBoundaries = object1.collisionFunction!();\r\n    const obj2Bounds: IBoundaries = object2.collisionFunction!();\r\n    const l1: number[] = obj1Bounds.edges[0]; //top left\r\n    const r1: number[] = obj1Bounds.edges[2]; // bottom right\r\n\r\n    const l2: number[] = obj2Bounds.edges[0]; //top left\r\n    const r2: number[] = obj2Bounds.edges[2]; // bottom right\r\n\r\n    if(r1[0] < l2[0] || r2[0] < l1[0]){\r\n        return false;\r\n    }\r\n\r\n    if(r1[1] < l2[1] || r2[1] < l1[1]){\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { IAppState } from '../../store/store';\r\nimport { ISubscription, FunctionType } from '../../reducers';\r\nimport './Loop.styles.css';\r\nimport { checkCollision } from '../GeneralUtils/Collisions';\r\n\r\ninterface ILoopProps {\r\n    loop: ISubscription[];\r\n}\r\n\r\ninterface ILoopState {\r\n    requestID: number;\r\n    fps: number;\r\n    keys: IKey[];\r\n}\r\n\r\nexport interface IKey {\r\n    key: string;\r\n    isPressed: boolean;\r\n}\r\n\r\nclass Loop extends React.Component<ILoopProps, ILoopState> {\r\n    public readonly state: Readonly<ILoopState> = {\r\n        requestID: 0,\r\n        fps: 0,\r\n        keys: []\r\n    }\r\n\r\n    private timeMeasurements: number[] = [];\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            requestID: window.requestAnimationFrame(this.loop),\r\n            keys: [\r\n                {key: 'w', isPressed: false},\r\n                {key: 'a', isPressed: false},\r\n                {key: 's', isPressed: false},\r\n                {key: 'd', isPressed: false}\r\n            ]\r\n        });\r\n        document.onkeydown = this.keyChange;\r\n        document.onkeyup = this.keyChange;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const {requestID} = this.state;\r\n\r\n        if(requestID){\r\n            window.cancelAnimationFrame(requestID);\r\n        }\r\n    }\r\n\r\n    keyChange = (ev: KeyboardEvent) => {\r\n        const { keys } = this.state;\r\n\r\n        if(ev.type === 'keyup'){\r\n            this.setState({\r\n                keys: keys.map((key: IKey) => {\r\n                    if(ev.key === key.key){\r\n                        return {key: key.key, isPressed: false};\r\n                    }else{\r\n                        return key;\r\n                    }\r\n                })\r\n            })\r\n        }else if(ev.type === 'keydown'){\r\n            this.setState({\r\n                keys: keys.map((key: IKey) => {\r\n                    if(ev.key === key.key){\r\n                        return {key: key.key, isPressed: true};\r\n                    }else{\r\n                        return key;\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    loop = () => {\r\n        this.timeMeasurements.push(performance.now());\r\n\r\n        const msPassed = this.timeMeasurements[this.timeMeasurements.length-1] - this.timeMeasurements[0];\r\n\r\n        if (msPassed >= 0.5 * 1000) {\r\n            this.setState({\r\n                fps: Math.round(this.timeMeasurements.length / msPassed * 1000 * 2) / 2\r\n            });\r\n            this.timeMeasurements = [];\r\n        }\r\n\r\n        this.props.loop.forEach(func => {\r\n            if(func.functionType === FunctionType.MOVEMENT){\r\n                if(this.props.loop.map(objToCheck => {\r\n                    if(objToCheck.collides && func !== objToCheck){\r\n                        return checkCollision(func, objToCheck);\r\n                    }else{\r\n                        return false;\r\n                    }\r\n                }).indexOf(true) < 0){\r\n                    if(func.inputCheck){\r\n                        func.func(this.state.keys);\r\n                    }else{\r\n                        func.func();\r\n                    }\r\n                }\r\n            }\r\n            else{\r\n                if(func.inputCheck){\r\n                    func.func(this.state.keys);\r\n                }else{\r\n                    func.func();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            requestID: window.requestAnimationFrame(this.loop)\r\n        })\r\n    }\r\n\r\n    public render() {\r\n        const { fps } = this.state;\r\n        return (\r\n            <div className=\"loopStats\">\r\n                <div>{`fps: ${fps}`}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => {\r\n    return {\r\n        loop: store.loopState.subscriptions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Loop);","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { subscribeToLoop } from '../Engine/actions';\r\nimport { IAppState } from '../Engine/store/store';\r\nimport { IKey } from '../Engine/Components/Functionality/Loop';\r\nimport { IBoundaries } from '../Engine/Components/GeneralUtils/Collisions';\r\nimport { FunctionType } from '../Engine/reducers';\r\n\r\nexport interface ISquareState {\r\n    left: number;\r\n    top: number;\r\n    movingRight: boolean;\r\n}\r\n\r\ninterface ISquareProps {\r\n    subscribeToLoop: typeof subscribeToLoop;\r\n    size: number;\r\n}\r\n\r\nclass Square extends React.Component<ISquareProps, ISquareState>{\r\n    constructor(props: ISquareProps){\r\n        super(props);\r\n        this.state = ({\r\n            left: 102,\r\n            top:102,\r\n            movingRight: true\r\n        });\r\n    }\r\n\r\n    generateBoundaries = (): IBoundaries => {\r\n        const { top, left } = this.state;\r\n\r\n        return{\r\n            numberOfEdges: 4,\r\n            edges: [\r\n                [left, top],\r\n                [left + this.props.size, top],\r\n                [left + this.props.size, top + this.props.size],\r\n                [left, top + this.props.size]],\r\n            hole: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.subscribeToLoop(this.movement, FunctionType.MOVEMENT, true, this.generateBoundaries, true);\r\n    }\r\n\r\n    movement = (keys: IKey[]) => {\r\n        keys.forEach((key: IKey) =>{\r\n            if(key.isPressed){\r\n                switch(key.key){\r\n                    case 'a':\r\n                        if(key.isPressed){\r\n                            this.setState({\r\n                                left: this.state.left-2\r\n                            })\r\n                        }\r\n                        break;\r\n                    case 's':\r\n                        this.setState({\r\n                            top: this.state.top+2\r\n                        })\r\n                        break;\r\n                    case 'd':\r\n                        this.setState({\r\n                            left: this.state.left+2\r\n                        })\r\n                        break;\r\n                    case 'w':\r\n                        this.setState({\r\n                            top: this.state.top-2\r\n                        })\r\n                        break;\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { size } = this.props;\r\n        const { left, top } = this.state;\r\n        const styles: React.CSSProperties = {\r\n            position: 'relative',\r\n            backgroundColor:'lightgreen',\r\n            width: size + 'px',\r\n            height: size + 'px',\r\n            left: left + 'px',\r\n            top: top + 'px'\r\n        }\r\n        return (\r\n            <div style={styles}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => {\r\n    return {\r\n        loop: {\r\n            subscriptions: store.loopState.subscriptions\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{ subscribeToLoop })(Square);","import * as React from 'react';\r\nimport './Cell.styles.css';\r\nimport { connect } from 'react-redux';\r\nimport { IAppState } from '../../store/store';\r\nimport { subscribeToLoop } from '../../actions';\r\nimport { FunctionType } from '../../reducers';\r\nimport { IBoundaries } from '../GeneralUtils/Collisions';\r\nexport interface ICellProps{\r\n    subscribeToLoop: typeof subscribeToLoop;\r\n    left: number;\r\n    top: number;\r\n    isWall: boolean;\r\n    size: number;\r\n}\r\n\r\nclass Cell extends React.Component<ICellProps>{\r\n    componentDidMount(){\r\n        if(this.props.isWall){\r\n            this.props.subscribeToLoop(()=>{}, FunctionType.GENERAL, false, this.getBounds, true);\r\n        }\r\n    }\r\n\r\n    getBounds = (): IBoundaries => {\r\n        const { left, top, size } = this.props;\r\n        return {\r\n            edges: [\r\n                [left, top],\r\n                [left+size, top],\r\n                [left+size, top+size],\r\n                [left, top+size]\r\n            ],\r\n            hole: false,\r\n            numberOfEdges: 4\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const styles = {\r\n            left: this.props.left+'px',\r\n            top: this.props.top+'px',\r\n            width: this.props.size+'px',\r\n            height: this.props.size+'px'\r\n        }\r\n        const key = `${this.props.left}x${this.props.top}`;\r\n        return(\r\n            this.props.isWall ? <div key={key} style={styles} className=\"wall\"/> : <div key={key} style={styles} className=\"open\"/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (store: IAppState) => {\r\n    return {\r\n        loop: {\r\n            subscriptions: store.loopState.subscriptions\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{ subscribeToLoop })(Cell);","import * as React from 'react';\r\nimport Cell from './Cell';\r\nimport { IAppState } from '../../store/store';\r\nimport { subscribeToLoop } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nexport interface ITerrainProps {\r\n    left: number;\r\n    top: number;\r\n    width: number;\r\n    height: number;\r\n    cells: boolean[];\r\n    sizeOfCell: number;\r\n}\r\n\r\nclass Terrain extends React.Component<ITerrainProps>{\r\n    private map: JSX.Element[] = [];\r\n\r\n    componentWillMount(){\r\n        const {width, height, sizeOfCell, cells, left, top} = this.props;\r\n        for(let i = 0; i < width; i++){\r\n            for(let j = 0; j < height; j++){\r\n                this.map.push(\r\n                    <Cell\r\n                        left={left+(i*sizeOfCell)}\r\n                        top={top+(j*sizeOfCell)}\r\n                        isWall={cells[j*width+i]}\r\n                        size={sizeOfCell}\r\n                    />\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{position: 'absolute', left: this.props.left+'px', top: this.props.top+'px'}} className=\"terrain\">\r\n                {this.map.map(cell => {\r\n                    return cell\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => {\r\n    return {\r\n        loop: {\r\n            subscriptions: store.loopState.subscriptions\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{ subscribeToLoop })(Terrain);","import React from 'react';\r\nimport Loop from '../Engine/Components/Functionality/Loop';\r\nimport Square from '../Components/Square';\r\nimport Terrain from '../Engine/Components/Map/Terrain';\r\nimport { subscribeToLoop } from '../Engine/actions';\r\nimport { IAppState } from '../Engine/store/store';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface IAppProps{\r\n  subscribeToLoop: typeof subscribeToLoop;\r\n}\r\n\r\nclass App extends React.Component<IAppProps>{\r\n  render(){\r\n    return (\r\n      <>\r\n        <Terrain\r\n          left={0}\r\n          top={0}\r\n          width={20}\r\n          height={10}\r\n          sizeOfCell={100}\r\n          cells={[\r\n            true, true, true, true, true, true, true, true, true, true,\r\n            true, false, true, false, false, true, false, true, false, true,\r\n            true, false, false, false, false, false, false, false, false, true,\r\n            true, false, false, true, false, false, true, false, true, true,\r\n            true, false, true, false, false, true, false, true, false, true,\r\n            true, false, false, false, false, false, false, false, false, true,\r\n            true, false, true, false, false, true, false, true, false, true,\r\n            true, false, false, false, false, false, false, false, false, true,\r\n            true, false, true, false, false, true, false, true, false, true,\r\n            true, false, false, true, false, false, false, false, true, true,\r\n            true, false, false, false, false, true, true, false, false, true,\r\n            true, false, true, false, false, true, false, true, false, true,\r\n            true, false, false, false, false, false, false, false, false, true,\r\n            true, false, false, true, false, false, true, false, true, true,\r\n            true, false, true, false, false, true, false, true, false, true,\r\n            true, false, false, false, false, false, false, false, false, true,\r\n            true, false, true, false, false, true, false, true, false, true,\r\n            true, false, false, false, false, false, false, false, false, true,\r\n            true, false, true, false, false, true, false, true, false, true,\r\n            true, true, true, true, true, true, true, true, true, true,\r\n          ]}/>\r\n        <Square size={40}/>\r\n        <Loop/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => {\r\n  return {\r\n      loop: {\r\n          subscriptions: store.loopState.subscriptions\r\n      }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps,{ subscribeToLoop })(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { ILoopState, loopReducer } from '../reducers';\r\n\r\nexport interface IAppState {\r\n    loopState: ILoopState;\r\n}\r\n\r\nconst rootReducer = combineReducers<IAppState>({\r\n    loopState: loopReducer\r\n});\r\n\r\nconst configureStore = (): Store<IAppState, any> => {\r\n    const store = createStore(rootReducer, undefined, applyMiddleware(thunk));\r\n    return store;\r\n}\r\n\r\nexport default configureStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './Engine/store/store';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App/>\r\n</Provider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}